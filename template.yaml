AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: NestJS Serverless Application

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        NODE_ENV: production
    VpcConfig:
      SecurityGroupIds:
        - sg-06148d712037fec50
        - !Ref LambdaSecurityGroup
      SubnetIds:
        - subnet-007500d7eb02d5a9c
        - subnet-0144f82913769dc0d
        - subnet-08e2157684a078b3b
        - subnet-006a57796b978d0fa
    Layers:
      - !Ref DependenciesLayer

Parameters:
  DatabaseUrl:
    Type: String
    Description: Aurora PostgreSQL write instance connection URL
    NoEcho: true
    Default: "postgresql://postgres:12345678@database-1.cf8a068489ao.ap-northeast-1.rds.amazonaws.com:5432/postgres"
  
Resources:

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda functions
      VpcId: vpc-0b4bc13cd4ef012cb
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: nestjs-dependencies
      Description: Production dependencies for NestJS Lambda functions
      ContentUri: layer/
      CompatibleRuntimes:
        - nodejs20.x
      RetentionPolicy: Delete

  NestJSFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/
      Handler: lambda.handler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGateway
        RootEvent:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId: !Ref ApiGateway
      Environment:
        Variables:
          DATABASE_URL: !Ref DatabaseUrl

  WarmupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/
      Handler: lambda.warmup
      Events:
        WarmupEvent:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
            Input: '{"source": "warmup"}'

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: NestJS-API
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      BinaryMediaTypes:
        - "*/*"

Outputs:
  ApiUrl:
    Description: URL of the API Gateway
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"

  ApiGatewayId:
    Description: API Gateway ID
    Value: !Ref ApiGateway
    Export:
      Name: !Sub "${AWS::StackName}-ApiGatewayId"

  LambdaSecurityGroupId:
    Description: Security group associated with Lambda functions
    Value: !Ref LambdaSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-LambdaSecurityGroupId"

  DependenciesLayerArn:
    Description: ARN of the shared Lambda layer containing production dependencies
    Value: !Ref DependenciesLayer
    Export:
      Name: !Sub "${AWS::StackName}-DependenciesLayerArn"
