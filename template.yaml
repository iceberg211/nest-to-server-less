AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: NestJS Serverless Application

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        NODE_ENV: production
    VpcConfig:
      SecurityGroupIds:
        - !Ref LambdaSecurityGroup
      SubnetIds: !Ref PrivateSubnetIds
    Layers:
      - !Ref DependenciesLayer

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC for Lambda functions and database resources

  PrivateSubnetIds:
    Type: CommaDelimitedList
    Description: Comma-separated list of private subnet IDs for Lambda functions

  DatabaseUrl:
    Type: String
    Description: Database connection URL
    NoEcho: true
    Default: "postgresql://postgres2:Lumia1520@database-2.cf8a068489ao.ap-northeast-1.rds.amazonaws.com:5432"

Resources:
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Lambda functions to reach VPC resources
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0

  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: nestjs-dependencies
      Description: Production dependencies for NestJS Lambda functions
      ContentUri: layer/
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Delete

  NestJSFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/
      Handler: lambda.handler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGateway
        RootEvent:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId: !Ref ApiGateway
      Environment:
        Variables:
          DATABASE_URL: !Ref DatabaseUrl

  WarmupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/
      Handler: lambda.warmup
      Events:
        WarmupEvent:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
            Input: '{"source": "warmup"}'

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: NestJS-API
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      BinaryMediaTypes:
        - "*/*"

Outputs:
  ApiUrl:
    Description: URL of the API Gateway
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"

  ApiGatewayId:
    Description: API Gateway ID
    Value: !Ref ApiGateway
    Export:
      Name: !Sub "${AWS::StackName}-ApiGatewayId"

  LambdaSecurityGroupId:
    Description: Security group associated with Lambda functions
    Value: !Ref LambdaSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-LambdaSecurityGroupId"

  DependenciesLayerArn:
    Description: ARN of the shared Lambda layer containing production dependencies
    Value: !Ref DependenciesLayer
    Export:
      Name: !Sub "${AWS::StackName}-DependenciesLayerArn"
